#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Jan 25 16:49:09 2021

@author: N
"""

# Read the large nc file

from netCDF4 import Dataset 
import numpy as np
import pandas as pd
import datetime
import multiprocessing as mp
import sys
sys.path.append('/home/rbani20/projects/def-guichard/rbani20/postdoc/codes')
from BLT_LS_func import TLT_LS_nc_func, extract_func, put_together_nc, put_together_nc2, BLT_nc_func

WA_grid=[[[163,94],[165,101]],
         [[165,93],[166,101]],
         [[166,91],[168,101]],
         [[168,90],[169,101]],
         [[169,90],[171,101]],
         [[171,90],[173,98]],
         [[173,92],[174,98]],
         [[174,92],[175,97]],
         [[175,89],[178,97]],
         [[178,87],[180,95]]]
WA_grid_LS=[[[163,98],[169,100]],
         [[169,97],[173,99]],
         [[173,95],[178,97]],
         [[178,93],[180,95]]]
OR_grid=[[[120,93],[122,97]],         
         [[122,92],[127,96]],                
         [[127,91],[129,95]],         
         [[129,91],[132,96]],         
         [[132,92],[134,96]],         
         [[134,92],[135,97]],         
         [[135,93],[138,98]],         
         [[138,90],[144,99]],         
         [[144,91],[150,100]],
         [[150,92],[151,100]],
         [[151,93],[154,101]],
         [[154,92],[161,101]],
         [[161,93],[163,101]]]
OR_grid_LS=[[[120,95],[122,97]],         
         [[122,95],[127,96]],                
         [[127,94],[129,95]],         
         [[129,94],[132,96]],         
         [[132,95],[134,96]],         
         [[134,96],[135,97]],         
         [[135,97],[138,98]],         
         [[138,98],[144,99]],         
         [[144,99],[151,100]],
         [[151,99],[163,101]]]
NCA_grid=[[[88,100],[89,104]],         
         [[89,99],[90,103]],                
         [[90,100],[91,103]],         
         [[91,99],[93,103]],         
         [[93,99],[98,102]],          
         [[98,98],[99,101]],         
         [[99,97],[100,100]],         
         [[100,96],[101,99]],          
         [[101,95],[102,98]],
         [[102,92],[103,97]],
         [[103,95],[104,97]],
         [[104,93],[105,96]],
         [[105,93],[106,96]],
         [[106,94],[107,97]],
         [[107,94],[108,98]],
         [[108,94],[110,99]],
         [[110,95],[113,99]],
         [[113,94],[116,100]],
         [[116,94],[120,99]]]
NCA_grid_LS=[[[88,103],[89,104]],         
         [[89,102],[90,103]],                
         [[90,101],[93,103]],                
         [[93,101],[98,102]],          
         [[98,100],[99,101]],         
         [[99,99],[100,100]],         
         [[100,98],[101,99]],          
         [[101,97],[102,98]],
         [[102,96],[104,97]],
         [[104,95],[106,96]],
         [[106,96],[107,97]],
         [[107,97],[108,98]],
         [[108,98],[113,99]],
         [[113,98],[116,100]],
         [[116,97],[120,99]]]
SCA_grid=[[[27,138],[28,139]],
         [[30,136],[32,139]],
         [[33,137],[34,138]],
         [[36,137],[39,142]],
         [[32,141],[35,147]],
         [[28,143],[31,148]],
         [[25,142],[28,145]],
         [[25,146],[28,150]],
         [[27,153],[31,157]],
         [[25,159],[29,163]],
         [[25,165],[32,169]],
         [[32,163],[34,166]],
         [[32,152],[36,159]],
         [[33,147],[38,151]],
         [[34,157],[37,163]],
         [[37,153],[39,156]],
         [[39,134],[41,156]],
         [[41,133],[44,148]],
         [[44,132],[45,145]],
         [[45,131],[46,135]],
         [[47,125],[51,128]],
         [[46,129],[52,134]],   
         [[52,127],[55,131]],
         [[55,126],[56,130]],
         [[56,124],[58,128]],
         [[58,124],[59,126]],
         [[59,123],[61,125]],
         [[61,122],[62,124]],         
         [[62,119],[63,123]],                
         [[63,119],[66,121]],         
         [[66,119],[67,120]],         
         [[67,120],[68,122]],          
         [[68,118],[69,122]],         
         [[69,115],[70,122]],         
         [[70,113],[71,118]],          
         [[71,111],[72,117]],
         [[72,110],[75,116]],
         [[75,109],[77,115]],
         [[77,107],[78,115]],
         [[78,106],[79,115]],
         [[79,105],[80,113]],
         [[80,105],[83,111]],
         [[83,104],[84,110]],
         [[84,103],[85,109]],
         [[85,102],[86,107]],
         [[86,102],[87,106]],
         [[87,101],[88,105]]]
SCA_grid_LS=[[[27,138],[28,139]],
         [[30,136],[32,139]],
         [[33,137],[34,138]],
         [[36,137],[39,142]],
         [[32,141],[35,147]],
         [[28,143],[31,148]],
         [[25,142],[28,145]],
         [[25,146],[28,150]],
         [[27,153],[31,157]],
         [[25,159],[29,163]],
         [[25,165],[32,169]],
         [[32,163],[34,166]],
         [[32,152],[36,159]],
         [[33,147],[38,151]],
         [[34,157],[37,163]],
         [[37,153],[39,156]],
         [[39,134],[41,156]],
         [[41,146],[44,148]],
         [[44,134],[45,145]],
         [[45,133],[46,135]],
         [[47,125],[51,128]],
         [[46,132],[52,134]],   
         [[52,130],[55,131]],
         [[55,128],[56,130]],
         [[56,126],[58,128]],
         [[58,124],[59,126]],
         [[59,123],[61,125]],
         [[61,122],[62,124]],         
         [[62,121],[63,123]],                
         [[63,120],[66,121]],         
         [[66,120],[67,122]],         
         [[67,121],[68,122]],          
         [[68,121],[69,122]],         
         [[69,118],[70,122]],         
         [[70,117],[71,118]],      
         [[71,116],[72,117]],
         [[72,115],[75,116]],
         [[75,114],[77,115]],
         [[77,114],[78,115]],
         [[78,113],[79,115]],
         [[79,111],[80,113]],
         [[80,109],[83,111]],
         [[83,109],[84,110]],
         [[84,108],[85,109]],
         [[85,106],[86,107]],
         [[86,105],[87,106]],
         [[87,104],[88,105]]]
SCA_grid_NISL=[[[25,165],[32,169]],
         [[32,163],[34,166]],
         [[34,157],[37,163]],
         [[37,153],[39,156]],
         [[39,134],[41,156]],
         [[41,133],[44,148]],
         [[44,132],[45,145]],
         [[45,131],[46,135]],
         [[46,129],[52,134]],   
         [[52,127],[55,131]],
         [[55,126],[56,130]],
         [[56,124],[58,128]],
         [[58,124],[59,126]],
         [[59,123],[61,125]],
         [[61,122],[62,124]],         
         [[62,119],[63,123]],                
         [[63,119],[66,121]],         
         [[66,119],[67,103]],         
         [[67,120],[68,122]],          
         [[68,118],[69,122]],         
         [[69,115],[70,122]],         
         [[70,113],[71,118]],          
         [[71,111],[72,117]],
         [[72,110],[75,116]],
         [[75,109],[77,115]],
         [[77,107],[78,115]],
         [[78,106],[79,115]],
         [[79,105],[80,113]],
         [[80,105],[83,111]],
         [[83,104],[84,110]],
         [[84,103],[85,109]],
         [[85,102],[86,107]],
         [[86,102],[87,106]],
         [[87,101],[88,105]]]


WA_grid_150 = np.zeros(np.array(WA_grid).shape).tolist()
for i in range(len(WA_grid_150)):
    WA_grid_150[i][0][1] = WA_grid[i][1][1]-15
    WA_grid_150[i][0][0] = WA_grid[i][0][0]
    WA_grid_150[i][1][0] = WA_grid[i][1][0]
    WA_grid_150[i][1][1] = WA_grid[i][1][1]
    

OR_grid_150 = np.zeros(np.array(OR_grid).shape).tolist()
for i in range(len(OR_grid_150)):
    OR_grid_150[i][0][1] = OR_grid[i][1][1]-15
    OR_grid_150[i][0][0] = OR_grid[i][0][0]
    OR_grid_150[i][1][0] = OR_grid[i][1][0]
    OR_grid_150[i][1][1] = OR_grid[i][1][1]
    
    
NCA_grid_150 = np.zeros(np.array(NCA_grid).shape).tolist()
for i in range(len(NCA_grid_150)):
    NCA_grid_150[i][0][1] = NCA_grid[i][1][1]-15
    NCA_grid_150[i][0][0] = NCA_grid[i][0][0]
    NCA_grid_150[i][1][0] = NCA_grid[i][1][0]
    NCA_grid_150[i][1][1] = NCA_grid[i][1][1]
    
    
SCA_grid_150 = np.zeros(np.array(SCA_grid).shape).tolist()
for i in range(len(SCA_grid_150)):
    SCA_grid_150[i][0][1] = SCA_grid[i][1][1]-15
    SCA_grid_150[i][0][0] = SCA_grid[i][0][0]
    SCA_grid_150[i][1][0] = SCA_grid[i][1][0]
    SCA_grid_150[i][1][1] = SCA_grid[i][1][1]
    
WA_grid_250 = np.zeros(np.array(WA_grid).shape).tolist()
for i in range(len(WA_grid_250)):
    WA_grid_250[i][0][1] = WA_grid[i][1][1]-25
    WA_grid_250[i][0][0] = WA_grid[i][0][0]
    WA_grid_250[i][1][0] = WA_grid[i][1][0]
    WA_grid_250[i][1][1] = WA_grid[i][1][1]
    

OR_grid_250 = np.zeros(np.array(OR_grid).shape).tolist()
for i in range(len(OR_grid_250)):
    OR_grid_250[i][0][1] = OR_grid[i][1][1]-25
    OR_grid_250[i][0][0] = OR_grid[i][0][0]
    OR_grid_250[i][1][0] = OR_grid[i][1][0]
    OR_grid_250[i][1][1] = OR_grid[i][1][1]
    
    
NCA_grid_250 = np.zeros(np.array(NCA_grid).shape).tolist()
for i in range(len(NCA_grid_250)):
    NCA_grid_250[i][0][1] = NCA_grid[i][1][1]-25
    NCA_grid_250[i][0][0] = NCA_grid[i][0][0]
    NCA_grid_250[i][1][0] = NCA_grid[i][1][0]
    NCA_grid_250[i][1][1] = NCA_grid[i][1][1]
    
    
SCA_grid_250 = np.zeros(np.array(SCA_grid).shape).tolist()
for i in range(len(SCA_grid_250)):
    SCA_grid_250[i][0][1] = SCA_grid[i][1][1]-25
    SCA_grid_250[i][0][0] = SCA_grid[i][0][0]
    SCA_grid_250[i][1][0] = SCA_grid[i][1][0]
    SCA_grid_250[i][1][1] = SCA_grid[i][1][1]

WC_US_grid=[]
WC_US_grid.append(WA_grid);WC_US_grid.append(OR_grid);WC_US_grid.append(NCA_grid);WC_US_grid.append(SCA_grid);

WC_US_grid_LS=[]
WC_US_grid_LS.append(WA_grid_LS);WC_US_grid_LS.append(OR_grid_LS);WC_US_grid_LS.append(NCA_grid_LS);WC_US_grid_LS.append(SCA_grid_LS);

WC_US_grid_150 = []
WC_US_grid_150.append(WA_grid_150);WC_US_grid_150.append(OR_grid_150);WC_US_grid_150.append(NCA_grid_150);WC_US_grid_150.append(SCA_grid_150);

WC_US_grid_250 = []
WC_US_grid_250.append(WA_grid_250);WC_US_grid_250.append(OR_grid_250);WC_US_grid_250.append(NCA_grid_250);WC_US_grid_250.append(SCA_grid_250);

All_grid =[]
All_grid.append(WC_US_grid_LS);All_grid.append(WC_US_grid);All_grid.append(WC_US_grid_150);All_grid.append(WC_US_grid_250);



days_range = list(range(0,3676,4))

#ST=['date','TLT_WA','WA_LS','CS_WA','TLT_OR','WA_OR','CS_OR','TLT_NCA','WA_NCA','CS_NCA','TLT_SCA','WA_SCA','CS_SCA']
ST=['date','BLT_WA','BLT_OR','BLT_NCA','BLT_SCA']
loc =['LS','CS','150','250']
#for grid in All_grid:    
results = [put_together_nc2(day, WA_grid, OR_grid, NCA_grid, SCA_grid) for day in days_range]
results = np.array(results)
Empty_dataframe = pd.DataFrame(results, columns = ST)
Empty_dataframe.to_csv("datanew/Data_BLT_CS.csv", )



